"""Initial migration with project_id

Revision ID: 90999e6f2e3b
Revises: 
Create Date: 2025-04-17 10:56:38.890904

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '90999e6f2e3b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_image_metadata_filename', table_name='image_metadata')
    op.drop_index('ix_image_metadata_id', table_name='image_metadata')
    op.drop_table('image_metadata')
    op.drop_table('spatial_ref_sys')
    op.add_column('ndvi_results', sa.Column('project_id', sa.Integer(), nullable=True))
    op.alter_column('ndvi_results', 'filename',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('ndvi_results', 's3_url',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('ndvi_results', 'raster_extent',
               existing_type=geoalchemy2.types.Geometry(geometry_type='POLYGON', srid=4326, from_text='ST_GeomFromEWKT', name='geometry', _spatial_index_reflected=True),
               type_=geoalchemy2.types.Geometry(geometry_type='POLYGON', from_text='ST_GeomFromEWKT', name='geometry'),
               existing_nullable=True)
    op.alter_column('ndvi_results', 'timestamp',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.create_foreign_key(None, 'ndvi_results', 'projects', ['project_id'], ['id'])
    op.alter_column('projects', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('projects', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('projects', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('projects', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_constraint(None, 'ndvi_results', type_='foreignkey')
    op.alter_column('ndvi_results', 'timestamp',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('ndvi_results', 'raster_extent',
               existing_type=geoalchemy2.types.Geometry(geometry_type='POLYGON', from_text='ST_GeomFromEWKT', name='geometry'),
               type_=geoalchemy2.types.Geometry(geometry_type='POLYGON', srid=4326, from_text='ST_GeomFromEWKT', name='geometry', _spatial_index_reflected=True),
               existing_nullable=True)
    op.alter_column('ndvi_results', 's3_url',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('ndvi_results', 'filename',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('ndvi_results', 'project_id')
    op.create_table('spatial_ref_sys',
    sa.Column('srid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('auth_name', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('auth_srid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('srtext', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.Column('proj4text', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.CheckConstraint('srid > 0 AND srid <= 998999', name='spatial_ref_sys_srid_check'),
    sa.PrimaryKeyConstraint('srid', name='spatial_ref_sys_pkey')
    )
    op.create_table('image_metadata',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('filename', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('uploaded_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='image_metadata_pkey')
    )
    op.create_index('ix_image_metadata_id', 'image_metadata', ['id'], unique=False)
    op.create_index('ix_image_metadata_filename', 'image_metadata', ['filename'], unique=False)
    # ### end Alembic commands ###
